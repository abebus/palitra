from collections.abc import Coroutine
from typing import Any, TypeVar
from .runner import EventLoopThreadRunner

T = TypeVar("T")

def run(coro: Coroutine[Any, Any, T], timeout: float | None = ...) -> T: ...
def gather(*coros: Coroutine[Any, Any, T], return_exceptions: bool = ..., timeout: float | None = ...) -> list[T | BaseException]: ...
def shutdown_global_runner() -> None: ...
def is_runner_alive() -> bool: ... 